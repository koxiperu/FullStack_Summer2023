- **EXERCISE 1 : Query**
    
    Given this database structure :
    
    **INSTRUMENTS**(id, name, type, price)
    **BANDS**(id, name, bio)
    **INSTRUMENTS_IN_BAND**(#band_id, #instrument_id)
    
    You need, in a separate TXT/SQL file, to write the query to:
    1. display all instruments (name) for the band ‘metallica’.
    2. For each band, display the name of the band +
    number of instruments.
    
    **Note: Only write the SQL query, no PHP.**
    
- **EXERCISE 2 : Debugging**
    
    A trainee, for which you are responsible, must retrieve a list of users from a database but also give the possibility of adding them using a form.
    
    The main script consists of two parts:
    
    - The list of users and their information
    - The form for adding a new user
    
    The trainee begins in PHP programming. It does not indent or comment on its code. As an internship supervisor, you must help him correct and make his code work.
    Good indentation of the code is also necessary.
    
    Implementation steps:
    
    1. Download the files below. Exercise 2 files.zip
    2. Deploy the files index.php and connect.php on your local server and import the SQL script users-install.sql. This will create a new database containing a table “users”.
    3. Help your trainee to debug his code, correct his errors and make it work.
    
    [Exercise 2 files.zip](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/86393b8f-0a02-417c-8f41-383fc86192ba/Exercise_2_files.zip)
    
- **EXERCICE 3 : Candy Shop**
    
    We will work for an Online Candy Shop. The owner wants to be able to add its products and display them.
    We will take care only of saving the products in the database through a form.
    In this exercise, you will have to create a new database and a form.
    This form will allow you to add a new candy in the database.
    
    **Step 1 :**
    Create a new database called “candy_shop” and create the ‘candy’ and ‘categories’ tables matching this structure :
    
    **CATEGORIES**(id, title)
    **CANDY**(id, name, price, #categ_id)
    
    Categories are : “Gummies”, “Lollipops”, “Caramel”.
    You’ll have to export the database and attach it to your evaluation folder.
    
    Here is a tutorial on exporting a database in PHPMyAdmin : 
    
    [phpMyAdmin — How to backup or export a database or table](https://help.dreamhost.com/hc/en-us/articles/214395738-phpMyAdmin-How-to-backup-or-export-a-database-or-table)
    
    **Step 2 :**
    Now, you need to be able to add a new candy thanks to the form.
    You have to follow those recommandations :
    
    - Category should be a dropdown-list to choose from Gummies/Lollipops/Caramel.
    - Validate the input coming from the form using exceptions.
    - Insert the candy in the database.
    - A success or error message will be displayed.
    
    BONUS : Use a custom Exception to check if the input of the form is valid.
    
- **EXERCISE 4 : Save some money**
**Step 1 :**
You work for a bank.
As part of the site redesign, you must create a BankAccount class which will have the following private properties:

- an account number (int)
- an amount (int)

Make the getters / setters to validate the data type above as well as the constructor allowing to instantiate the class.

Add two methods:

- **Withdraw**: Withdraw is possible on the account at any time. The withdraw operation checks if you have enough money on the bank account (amount). Then it removes the specified amount to the account’s balance.
- **Deposit**: The deposit is possible at any time. The deposit is the addition of an amount to the account

**Step 2 :**
You can choose between two account types : create an account to *save* money or a *professional account*.
Create the matching classes using inheritance.

**SavingAccount** will have an ‘interest’ property that is defined at the creation of the bank
account. It will also have a method to retrieve the current interest of the bank account.
For example: if you have an interest of 0.012 and 500€ on your bank account, your interest is
0.012*500€

**ProfessionalAccount** will allow you to withdraw even if the amount is negative.
Instead, it has a ‘limit’ property. This limit has to be defined when creating the bank account.
For